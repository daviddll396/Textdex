{"version":3,"sources":["firebase.js","contexts/AuthContexts.js","components/Chats.js","components/Login.js","components/App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","Chats","didMountRef","useRef","useContext","handleLogout","a","signOut","getFile","url","fetch","response","blob","data","File","type","current","axios","get","headers","process","email","uid","then","catch","formdata","FormData","append","photoURL","avatar","name","post","error","console","log","className","onClick","style","color","height","projectID","userName","userSecret","Login","id","signInWithRedirect","GoogleAuthProvider","GoogleOutlined","class","TwitterAuthProvider","TwitterOutlined","App","fontFamily","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e171928.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\nexport const auth = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDv8QurzSgHQowVeynUlG-BEgSt4VS2jWY\",\r\n    authDomain: \"textdex-26d79.firebaseapp.com\",\r\n    projectId: \"textdex-26d79\",\r\n    storageBucket: \"textdex-26d79.appspot.com\",\r\n    messagingSenderId: \"480015238304\",\r\n    appId: \"1:480015238304:web:6795976246cacd2e9ff5c5\"\r\n  }).auth();","import React, {useContext, useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { auth } from '../firebase'\r\n\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\n\r\n// children renders all the jsx passed into authprovider\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [user, setUser] = useState(null)\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            setUser(user)\r\n            setLoading(false);\r\n\r\n            if(user) history.push('/chats')\r\n        })\r\n    }, [user, history])\r\n    \r\n    const value = { user };\r\n\r\n    return (\r\n        <AuthContext.Provider value = {value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React, {useRef, useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ChatEngine } from 'react-chat-engine'\r\nimport { auth } from '../firebase'\r\nimport { useAuth } from '../contexts/AuthContexts'\r\nimport axios from 'axios'\r\n\r\n\r\nconst Chats = () => {\r\n    const didMountRef = useRef(false)\r\n    const history = useHistory()\r\n    const { user } = useAuth();\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    const handleLogout = async () => {\r\n        await auth.signOut();\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const getFile = async (url) => {\r\n        let response = await fetch(url);\r\n        let data = await response.blob()  //blobs are usually images or files that we want to collect in binary format\r\n\r\n        return new File([data], \"userPhoto.jpg\", {type: 'image/jpeg'})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!didMountRef.current){\r\n            didMountRef.current = true;\r\n        if(!user){\r\n                    history.push('/')\r\n\r\n                    return;\r\n                }\r\n\r\n                axios.get('https://api.chatengine.io/users/me/',{\r\n                    headers: {\r\n                    \"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID,\r\n                    \"user-name\" : user.email,\r\n                    \"user-secret\":user.uid,\r\n                }})\r\n                .then(() => {\r\n                    setLoading(false)\r\n                })\r\n                .catch(() => {\r\n                    let formdata = new FormData();\r\n                    formdata.append('email', user.email)\r\n                    formdata.append('username', user.email)\r\n                    formdata.append('secret', user.uid)\r\n\r\n                    getFile(user.photoURL)\r\n                    .then((avatar) => {\r\n\r\n                        formdata.append('avatar', avatar, avatar.name)\r\n                        axios.post(\"https://api.chatengine.io/users/\",\r\n                        formdata,\r\n                        {headers : {\"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY }}\r\n                        )\r\n                        .then(() => setLoading(false))\r\n                        .catch((error) => console.log(error))\r\n                    })\r\n                })\r\n\r\n\r\n\r\n        }\r\n\r\n        \r\n        \r\n    }, [user,history])\r\n\r\n\r\n    if(!user ||  loading)return (\r\n\r\n        <div className=\"loading\">\r\n           Loading... \r\n        </div>\r\n        )\r\n\r\n\r\n  return (\r\n    <div className=\"chats-page\">\r\n        <div className=\"nav-bar\">\r\n            <div className=\"logo-tab\">\r\n                TEXTDEX\r\n            </div>\r\n            <div  onClick = {handleLogout} className=\"logout-tab\">\r\n                Logout\r\n            </div>\r\n        </div>\r\n        <div className=\"white-text\" style = {{color:'white'}}>\r\n            <ChatEngine\r\n            height = \"calc(100vh - 66px)\"\r\n            projectID = {process.env.REACT_APP_CHAT_ENGINE_ID}\r\n            userName = {user.email}\r\n            userSecret = {user.uid}\r\n        />\r\n        </div>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chats","import React from 'react'\r\nimport {GoogleOutlined,TwitterOutlined} from '@ant-design/icons'\r\nimport 'firebase/app'\r\n\r\nimport { auth } from '../firebase'\r\nimport firebase from 'firebase/app'\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div id=\"login-page\">\r\n            <div id=\"login-card\">\r\n                <h2 className=\"logo\">TEXTDEX</h2>\r\n\r\n\r\n                <div id = \"hover\"\r\n                    className=\"login-button google loginbtnwidth\"\r\n                    onClick ={() => auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())}\r\n                >   \r\n                    \r\n                    <GoogleOutlined class = \"googleicon\"/> Sign in with Google\r\n                </div>\r\n\r\n\r\n                <br />  <br />\r\n\r\n\r\n                <div \r\n                    className=\"login-button twitter loginbtnwidth\"\r\n                    onClick ={() => auth.signInWithRedirect(new firebase.auth.TwitterAuthProvider())}\r\n                >\r\n                    <TwitterOutlined class = \"twittericon\"/>  Sign in with Twitter\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\"\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport { AuthProvider } from \"../contexts/AuthContexts\"\n\nimport Chats from \"./Chats\"\nimport Login from \"./Login\"\n\nfunction App() {\n  return (\n    <div style={{ fontFamily: 'poppins' }}>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/chats\" component={Chats} />\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}